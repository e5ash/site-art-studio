// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$arrow-left-black-name: 'arrow-left-black'
$arrow-left-black-x: 0px
$arrow-left-black-y: 20px
$arrow-left-black-offset-x: 0px
$arrow-left-black-offset-y: -20px
$arrow-left-black-width: 7px
$arrow-left-black-height: 13px
$arrow-left-black-total-width: 39px
$arrow-left-black-total-height: 33px
$arrow-left-black-image: '../../img/sprite.png'
$arrow-left-black: (0px, 20px, 0px, -20px, 7px, 13px, 39px, 33px, '../../img/sprite.png', 'arrow-left-black', )
$arrow-left-gray-name: 'arrow-left-gray'
$arrow-left-gray-x: 7px
$arrow-left-gray-y: 20px
$arrow-left-gray-offset-x: -7px
$arrow-left-gray-offset-y: -20px
$arrow-left-gray-width: 7px
$arrow-left-gray-height: 13px
$arrow-left-gray-total-width: 39px
$arrow-left-gray-total-height: 33px
$arrow-left-gray-image: '../../img/sprite.png'
$arrow-left-gray: (7px, 20px, -7px, -20px, 7px, 13px, 39px, 33px, '../../img/sprite.png', 'arrow-left-gray', )
$arrow-right-black-name: 'arrow-right-black'
$arrow-right-black-x: 14px
$arrow-right-black-y: 20px
$arrow-right-black-offset-x: -14px
$arrow-right-black-offset-y: -20px
$arrow-right-black-width: 7px
$arrow-right-black-height: 13px
$arrow-right-black-total-width: 39px
$arrow-right-black-total-height: 33px
$arrow-right-black-image: '../../img/sprite.png'
$arrow-right-black: (14px, 20px, -14px, -20px, 7px, 13px, 39px, 33px, '../../img/sprite.png', 'arrow-right-black', )
$arrow-right-gray-name: 'arrow-right-gray'
$arrow-right-gray-x: 21px
$arrow-right-gray-y: 20px
$arrow-right-gray-offset-x: -21px
$arrow-right-gray-offset-y: -20px
$arrow-right-gray-width: 7px
$arrow-right-gray-height: 13px
$arrow-right-gray-total-width: 39px
$arrow-right-gray-total-height: 33px
$arrow-right-gray-image: '../../img/sprite.png'
$arrow-right-gray: (21px, 20px, -21px, -20px, 7px, 13px, 39px, 33px, '../../img/sprite.png', 'arrow-right-gray', )
$instagram-blue-name: 'instagram-blue'
$instagram-blue-x: 0px
$instagram-blue-y: 9px
$instagram-blue-offset-x: 0px
$instagram-blue-offset-y: -9px
$instagram-blue-width: 11px
$instagram-blue-height: 11px
$instagram-blue-total-width: 39px
$instagram-blue-total-height: 33px
$instagram-blue-image: '../../img/sprite.png'
$instagram-blue: (0px, 9px, 0px, -9px, 11px, 11px, 39px, 33px, '../../img/sprite.png', 'instagram-blue', )
$instagram-white-name: 'instagram-white'
$instagram-white-x: 11px
$instagram-white-y: 9px
$instagram-white-offset-x: -11px
$instagram-white-offset-y: -9px
$instagram-white-width: 11px
$instagram-white-height: 11px
$instagram-white-total-width: 39px
$instagram-white-total-height: 33px
$instagram-white-image: '../../img/sprite.png'
$instagram-white: (11px, 9px, -11px, -9px, 11px, 11px, 39px, 33px, '../../img/sprite.png', 'instagram-white', )
$telegram-blue-name: 'telegram-blue'
$telegram-blue-x: 28px
$telegram-blue-y: 0px
$telegram-blue-offset-x: -28px
$telegram-blue-offset-y: 0px
$telegram-blue-width: 11px
$telegram-blue-height: 9px
$telegram-blue-total-width: 39px
$telegram-blue-total-height: 33px
$telegram-blue-image: '../../img/sprite.png'
$telegram-blue: (28px, 0px, -28px, 0px, 11px, 9px, 39px, 33px, '../../img/sprite.png', 'telegram-blue', )
$telegram-white-name: 'telegram-white'
$telegram-white-x: 28px
$telegram-white-y: 9px
$telegram-white-offset-x: -28px
$telegram-white-offset-y: -9px
$telegram-white-width: 11px
$telegram-white-height: 9px
$telegram-white-total-width: 39px
$telegram-white-total-height: 33px
$telegram-white-image: '../../img/sprite.png'
$telegram-white: (28px, 9px, -28px, -9px, 11px, 9px, 39px, 33px, '../../img/sprite.png', 'telegram-white', )
$vk-blue-name: 'vk-blue'
$vk-blue-x: 0px
$vk-blue-y: 0px
$vk-blue-offset-x: 0px
$vk-blue-offset-y: 0px
$vk-blue-width: 14px
$vk-blue-height: 9px
$vk-blue-total-width: 39px
$vk-blue-total-height: 33px
$vk-blue-image: '../../img/sprite.png'
$vk-blue: (0px, 0px, 0px, 0px, 14px, 9px, 39px, 33px, '../../img/sprite.png', 'vk-blue', )
$vk-white-name: 'vk-white'
$vk-white-x: 14px
$vk-white-y: 0px
$vk-white-offset-x: -14px
$vk-white-offset-y: 0px
$vk-white-width: 14px
$vk-white-height: 9px
$vk-white-total-width: 39px
$vk-white-total-height: 33px
$vk-white-image: '../../img/sprite.png'
$vk-white: (14px, 0px, -14px, 0px, 14px, 9px, 39px, 33px, '../../img/sprite.png', 'vk-white', )
$spritesheet-width: 39px
$spritesheet-height: 33px
$spritesheet-image: '../../img/sprite.png'
$spritesheet-sprites: ($arrow-left-black, $arrow-left-gray, $arrow-right-black, $arrow-right-gray, $instagram-blue, $instagram-white, $telegram-blue, $telegram-white, $vk-blue, $vk-white, )
$spritesheet: (39px, 33px, '../../img/sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)

.icon-
  &arrow-left-black
    @include sprite($arrow-left-black)
  &arrow-left-gray
    @include sprite($arrow-left-gray)
  &arrow-right-black
    @include sprite($arrow-right-black)
  &arrow-right-gray
    @include sprite($arrow-right-gray)
  &instagram-blue
    @include sprite($instagram-blue)
  &instagram-white
    @include sprite($instagram-white)
  &telegram-blue
    @include sprite($telegram-blue)
  &telegram-white
    @include sprite($telegram-white)
  &vk-blue
    @include sprite($vk-blue)
  &vk-white
    @include sprite($vk-white)